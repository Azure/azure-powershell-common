// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Common.MSGraph.Version1_0.Identity.DirectoryManagement.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MicrosoftgraphorgContact : MicrosoftgraphdirectoryObject
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphorgContact class.
        /// </summary>
        public MicrosoftgraphorgContact()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphorgContact class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="id">The unique idenfier for an entity.
        /// Read-only.</param>
        /// <param name="deletedDateTime">Date and time when this object was
        /// deleted. Always null when the object hasn't been deleted.</param>
        public MicrosoftgraphorgContact(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string id = default(string), System.DateTime? deletedDateTime = default(System.DateTime?), IList<MicrosoftgraphphysicalOfficeAddress> addresses = default(IList<MicrosoftgraphphysicalOfficeAddress>), string companyName = default(string), string department = default(string), IList<MicrosoftgraphdirectoryObject> directReports = default(IList<MicrosoftgraphdirectoryObject>), string displayName = default(string), string givenName = default(string), string jobTitle = default(string), string mail = default(string), string mailNickname = default(string), MicrosoftgraphdirectoryObject manager = default(MicrosoftgraphdirectoryObject), IList<MicrosoftgraphdirectoryObject> memberOf = default(IList<MicrosoftgraphdirectoryObject>), System.DateTime? onPremisesLastSyncDateTime = default(System.DateTime?), IList<MicrosoftgraphonPremisesProvisioningError> onPremisesProvisioningErrors = default(IList<MicrosoftgraphonPremisesProvisioningError>), bool? onPremisesSyncEnabled = default(bool?), IList<Microsoftgraphphone> phones = default(IList<Microsoftgraphphone>), IList<string> proxyAddresses = default(IList<string>), string surname = default(string), IList<MicrosoftgraphdirectoryObject> transitiveMemberOf = default(IList<MicrosoftgraphdirectoryObject>))
            : base(additionalProperties, id, deletedDateTime)
        {
            Addresses = addresses;
            CompanyName = companyName;
            Department = department;
            DirectReports = directReports;
            DisplayName = displayName;
            GivenName = givenName;
            JobTitle = jobTitle;
            Mail = mail;
            MailNickname = mailNickname;
            Manager = manager;
            MemberOf = memberOf;
            OnPremisesLastSyncDateTime = onPremisesLastSyncDateTime;
            OnPremisesProvisioningErrors = onPremisesProvisioningErrors;
            OnPremisesSyncEnabled = onPremisesSyncEnabled;
            Phones = phones;
            ProxyAddresses = proxyAddresses;
            Surname = surname;
            TransitiveMemberOf = transitiveMemberOf;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "addresses")]
        public IList<MicrosoftgraphphysicalOfficeAddress> Addresses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "companyName")]
        public string CompanyName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "department")]
        public string Department { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "directReports")]
        public IList<MicrosoftgraphdirectoryObject> DirectReports { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "givenName")]
        public string GivenName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "jobTitle")]
        public string JobTitle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mail")]
        public string Mail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mailNickname")]
        public string MailNickname { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "manager")]
        public MicrosoftgraphdirectoryObject Manager { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "memberOf")]
        public IList<MicrosoftgraphdirectoryObject> MemberOf { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onPremisesLastSyncDateTime")]
        public System.DateTime? OnPremisesLastSyncDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onPremisesProvisioningErrors")]
        public IList<MicrosoftgraphonPremisesProvisioningError> OnPremisesProvisioningErrors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onPremisesSyncEnabled")]
        public bool? OnPremisesSyncEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "phones")]
        public IList<Microsoftgraphphone> Phones { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "proxyAddresses")]
        public IList<string> ProxyAddresses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "surname")]
        public string Surname { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transitiveMemberOf")]
        public IList<MicrosoftgraphdirectoryObject> TransitiveMemberOf { get; set; }
    }
}
