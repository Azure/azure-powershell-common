// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Common.MSGraph.Version1_0.Identity.DirectoryManagement.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// provisionedPlan
    /// </summary>
    public partial class MicrosoftgraphprovisionedPlan
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphprovisionedPlan
        /// class.
        /// </summary>
        public MicrosoftgraphprovisionedPlan()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphprovisionedPlan
        /// class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="capabilityStatus">For example, 'Enabled'.</param>
        /// <param name="provisioningStatus">For example, 'Success'.</param>
        /// <param name="service">The name of the service; for example,
        /// 'AccessControlS2S'</param>
        public MicrosoftgraphprovisionedPlan(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string capabilityStatus = default(string), string provisioningStatus = default(string), string service = default(string))
        {
            AdditionalProperties = additionalProperties;
            CapabilityStatus = capabilityStatus;
            ProvisioningStatus = provisioningStatus;
            Service = service;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets for example, 'Enabled'.
        /// </summary>
        [JsonProperty(PropertyName = "capabilityStatus")]
        public string CapabilityStatus { get; set; }

        /// <summary>
        /// Gets or sets for example, 'Success'.
        /// </summary>
        [JsonProperty(PropertyName = "provisioningStatus")]
        public string ProvisioningStatus { get; set; }

        /// <summary>
        /// Gets or sets the name of the service; for example,
        /// 'AccessControlS2S'
        /// </summary>
        [JsonProperty(PropertyName = "service")]
        public string Service { get; set; }

    }
}
