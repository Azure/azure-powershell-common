// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Common.MSGraph.Version1_0.Identity.DirectoryManagement.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MicrosoftgraphdirectoryRole : MicrosoftgraphdirectoryObject
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphdirectoryRole
        /// class.
        /// </summary>
        public MicrosoftgraphdirectoryRole()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphdirectoryRole
        /// class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="id">The unique idenfier for an entity.
        /// Read-only.</param>
        /// <param name="deletedDateTime">Date and time when this object was
        /// deleted. Always null when the object hasn't been deleted.</param>
        /// <param name="description">The description for the directory role.
        /// Read-only. Supports $filter (eq), $search, $select.</param>
        /// <param name="displayName">The display name for the directory role.
        /// Read-only. Supports $filter (eq), $search, $select.</param>
        /// <param name="members">Users that are members of this directory
        /// role. HTTP Methods: GET, POST, DELETE. Read-only. Nullable.
        /// Supports $expand.</param>
        /// <param name="roleTemplateId">The id of the directoryRoleTemplate
        /// that this role is based on. The property must be specified when
        /// activating a directory role in a tenant with a POST operation.
        /// After the directory role has been activated, the property is read
        /// only. Supports $filter (eq), $select.</param>
        /// <param name="scopedMembers">Members of this directory role that are
        /// scoped to administrative units. Read-only. Nullable.</param>
        public MicrosoftgraphdirectoryRole(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string id = default(string), System.DateTime? deletedDateTime = default(System.DateTime?), string description = default(string), string displayName = default(string), IList<MicrosoftgraphdirectoryObject> members = default(IList<MicrosoftgraphdirectoryObject>), string roleTemplateId = default(string), IList<MicrosoftgraphscopedRoleMembership> scopedMembers = default(IList<MicrosoftgraphscopedRoleMembership>))
            : base(additionalProperties, id, deletedDateTime)
        {
            Description = description;
            DisplayName = displayName;
            Members = members;
            RoleTemplateId = roleTemplateId;
            ScopedMembers = scopedMembers;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the description for the directory role. Read-only.
        /// Supports $filter (eq), $search, $select.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the display name for the directory role. Read-only.
        /// Supports $filter (eq), $search, $select.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets users that are members of this directory role. HTTP
        /// Methods: GET, POST, DELETE. Read-only. Nullable. Supports $expand.
        /// </summary>
        [JsonProperty(PropertyName = "members")]
        public IList<MicrosoftgraphdirectoryObject> Members { get; set; }

        /// <summary>
        /// Gets or sets the id of the directoryRoleTemplate that this role is
        /// based on. The property must be specified when activating a
        /// directory role in a tenant with a POST operation. After the
        /// directory role has been activated, the property is read only.
        /// Supports $filter (eq), $select.
        /// </summary>
        [JsonProperty(PropertyName = "roleTemplateId")]
        public string RoleTemplateId { get; set; }

        /// <summary>
        /// Gets or sets members of this directory role that are scoped to
        /// administrative units. Read-only. Nullable.
        /// </summary>
        [JsonProperty(PropertyName = "scopedMembers")]
        public IList<MicrosoftgraphscopedRoleMembership> ScopedMembers { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (Members != null)
            {
                foreach (var element in Members)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
