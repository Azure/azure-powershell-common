// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Common.MSGraph.Version1_0.Identity.DirectoryManagement.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// signingCertificateUpdateStatus
    /// </summary>
    public partial class MicrosoftgraphsigningCertificateUpdateStatus
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphsigningCertificateUpdateStatus class.
        /// </summary>
        public MicrosoftgraphsigningCertificateUpdateStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphsigningCertificateUpdateStatus class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="certificateUpdateResult">Status of the last
        /// certificate update. Read-only. For a list of statuses, see
        /// certificateUpdateResult status.</param>
        /// <param name="lastRunDateTime">Date and time in ISO 8601 format and
        /// in UTC time when the certificate was last updated.
        /// Read-only.</param>
        public MicrosoftgraphsigningCertificateUpdateStatus(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string certificateUpdateResult = default(string), System.DateTime? lastRunDateTime = default(System.DateTime?))
        {
            AdditionalProperties = additionalProperties;
            CertificateUpdateResult = certificateUpdateResult;
            LastRunDateTime = lastRunDateTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets status of the last certificate update. Read-only. For
        /// a list of statuses, see certificateUpdateResult status.
        /// </summary>
        [JsonProperty(PropertyName = "certificateUpdateResult")]
        public string CertificateUpdateResult { get; set; }

        /// <summary>
        /// Gets or sets date and time in ISO 8601 format and in UTC time when
        /// the certificate was last updated. Read-only.
        /// </summary>
        [JsonProperty(PropertyName = "lastRunDateTime")]
        public System.DateTime? LastRunDateTime { get; set; }
    }
}
