// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Common.MSGraph.Version1_0.Identity.DirectoryManagement.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MicrosoftgraphinternalDomainFederation : MicrosoftgraphsamlOrWsFedProvider
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphinternalDomainFederation class.
        /// </summary>
        public MicrosoftgraphinternalDomainFederation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphinternalDomainFederation class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="id">The unique idenfier for an entity.
        /// Read-only.</param>
        /// <param name="displayName">The display name of the identity
        /// provider.</param>
        /// <param name="issuerUri">Issuer URI of the federation
        /// server.</param>
        /// <param name="metadataExchangeUri">URI of the metadata exchange
        /// endpoint used for authentication from rich client
        /// applications.</param>
        /// <param name="passiveSignInUri">URI that web-based clients are
        /// directed to when signing in to Azure Active Directory (Azure AD)
        /// services.</param>
        /// <param name="preferredAuthenticationProtocol">Possible values
        /// include: 'wsFed', 'saml', 'unknownFutureValue'</param>
        /// <param name="signingCertificate">Current certificate used to sign
        /// tokens passed to the Microsoft identity platform. The certificate
        /// is formatted as a Base64 encoded string of the public portion of
        /// the federated IdP's token signing certificate and must be
        /// compatible with the X509Certificate2 class.   This property is used
        /// in the following scenarios:  if a rollover is required outside of
        /// the autorollover update a new federation service is being set up
        /// if the new token signing certificate isn't present in the
        /// federation properties after the federation service certificate has
        /// been updated.   Azure AD updates certificates via an autorollover
        /// process in which it attempts to retrieve a new certificate from the
        /// federation service metadata, 30 days before expiry of the current
        /// certificate. If a new certificate isn't available, Azure AD
        /// monitors the metadata daily and will update the federation settings
        /// for the domain when a new certificate is available.</param>
        /// <param name="activeSignInUri">URL of the endpoint used by active
        /// clients when authenticating with federated domains set up for
        /// single sign-on in Azure Active Directory (Azure AD). Corresponds to
        /// the ActiveLogOnUri property of the Set-MsolDomainFederationSettings
        /// MSOnline v1 PowerShell cmdlet.</param>
        /// <param name="federatedIdpMfaBehavior">Possible values include:
        /// 'acceptIfMfaDoneByFederatedIdp', 'enforceMfaByFederatedIdp',
        /// 'rejectMfaByFederatedIdp', 'unknownFutureValue'</param>
        /// <param name="isSignedAuthenticationRequestRequired">If true, when
        /// SAML authentication requests are sent to the federated SAML IdP,
        /// Azure AD will sign those requests using the OrgID signing key. If
        /// false (default), the SAML authentication requests sent to the
        /// federated IdP are not signed.</param>
        /// <param name="nextSigningCertificate">Fallback token signing
        /// certificate that is used to sign tokens when the primary signing
        /// certificate expires. Formatted as Base64 encoded strings of the
        /// public portion of the federated IdP's token signing certificate.
        /// Needs to be compatible with the X509Certificate2 class. Much like
        /// the signingCertificate, the nextSigningCertificate property is used
        /// if a rollover is required outside of the auto-rollover update, a
        /// new federation service is being set up, or if the new token signing
        /// certificate is not present in the federation properties after the
        /// federation service certificate has been updated.</param>
        /// <param name="promptLoginBehavior">Possible values include:
        /// 'translateToFreshPasswordAuthentication', 'nativeSupport',
        /// 'disabled', 'unknownFutureValue'</param>
        /// <param name="signOutUri">URI that clients are redirected to when
        /// they sign out of Azure AD services. Corresponds to the LogOffUri
        /// property of the Set-MsolDomainFederationSettings MSOnline v1
        /// PowerShell cmdlet.</param>
        public MicrosoftgraphinternalDomainFederation(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string id = default(string), string displayName = default(string), string issuerUri = default(string), string metadataExchangeUri = default(string), string passiveSignInUri = default(string), string preferredAuthenticationProtocol = default(string), string signingCertificate = default(string), string activeSignInUri = default(string), string federatedIdpMfaBehavior = default(string), bool? isSignedAuthenticationRequestRequired = default(bool?), string nextSigningCertificate = default(string), string promptLoginBehavior = default(string), string signOutUri = default(string), MicrosoftgraphsigningCertificateUpdateStatus signingCertificateUpdateStatus = default(MicrosoftgraphsigningCertificateUpdateStatus))
            : base(additionalProperties, id, displayName, issuerUri, metadataExchangeUri, passiveSignInUri, preferredAuthenticationProtocol, signingCertificate)
        {
            ActiveSignInUri = activeSignInUri;
            FederatedIdpMfaBehavior = federatedIdpMfaBehavior;
            IsSignedAuthenticationRequestRequired = isSignedAuthenticationRequestRequired;
            NextSigningCertificate = nextSigningCertificate;
            PromptLoginBehavior = promptLoginBehavior;
            SignOutUri = signOutUri;
            SigningCertificateUpdateStatus = signingCertificateUpdateStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets URL of the endpoint used by active clients when
        /// authenticating with federated domains set up for single sign-on in
        /// Azure Active Directory (Azure AD). Corresponds to the
        /// ActiveLogOnUri property of the Set-MsolDomainFederationSettings
        /// MSOnline v1 PowerShell cmdlet.
        /// </summary>
        [JsonProperty(PropertyName = "activeSignInUri")]
        public string ActiveSignInUri { get; set; }

        /// <summary>
        /// Gets or sets possible values include:
        /// 'acceptIfMfaDoneByFederatedIdp', 'enforceMfaByFederatedIdp',
        /// 'rejectMfaByFederatedIdp', 'unknownFutureValue'
        /// </summary>
        [JsonProperty(PropertyName = "federatedIdpMfaBehavior")]
        public string FederatedIdpMfaBehavior { get; set; }

        /// <summary>
        /// Gets or sets if true, when SAML authentication requests are sent to
        /// the federated SAML IdP, Azure AD will sign those requests using the
        /// OrgID signing key. If false (default), the SAML authentication
        /// requests sent to the federated IdP are not signed.
        /// </summary>
        [JsonProperty(PropertyName = "isSignedAuthenticationRequestRequired")]
        public bool? IsSignedAuthenticationRequestRequired { get; set; }

        /// <summary>
        /// Gets or sets fallback token signing certificate that is used to
        /// sign tokens when the primary signing certificate expires. Formatted
        /// as Base64 encoded strings of the public portion of the federated
        /// IdP's token signing certificate. Needs to be compatible with the
        /// X509Certificate2 class. Much like the signingCertificate, the
        /// nextSigningCertificate property is used if a rollover is required
        /// outside of the auto-rollover update, a new federation service is
        /// being set up, or if the new token signing certificate is not
        /// present in the federation properties after the federation service
        /// certificate has been updated.
        /// </summary>
        [JsonProperty(PropertyName = "nextSigningCertificate")]
        public string NextSigningCertificate { get; set; }

        /// <summary>
        /// Gets or sets possible values include:
        /// 'translateToFreshPasswordAuthentication', 'nativeSupport',
        /// 'disabled', 'unknownFutureValue'
        /// </summary>
        [JsonProperty(PropertyName = "promptLoginBehavior")]
        public string PromptLoginBehavior { get; set; }

        /// <summary>
        /// Gets or sets URI that clients are redirected to when they sign out
        /// of Azure AD services. Corresponds to the LogOffUri property of the
        /// Set-MsolDomainFederationSettings MSOnline v1 PowerShell cmdlet.
        /// </summary>
        [JsonProperty(PropertyName = "signOutUri")]
        public string SignOutUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "signingCertificateUpdateStatus")]
        public MicrosoftgraphsigningCertificateUpdateStatus SigningCertificateUpdateStatus { get; set; }
    }
}
