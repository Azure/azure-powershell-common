// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Common.MSGraph.Version1_0.Identity.DirectoryManagement.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MicrosoftgraphsamlOrWsFedProvider : MicrosoftgraphidentityProviderBase
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphsamlOrWsFedProvider
        /// class.
        /// </summary>
        public MicrosoftgraphsamlOrWsFedProvider()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphsamlOrWsFedProvider
        /// class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="id">The unique idenfier for an entity.
        /// Read-only.</param>
        /// <param name="displayName">The display name of the identity
        /// provider.</param>
        /// <param name="issuerUri">Issuer URI of the federation
        /// server.</param>
        /// <param name="metadataExchangeUri">URI of the metadata exchange
        /// endpoint used for authentication from rich client
        /// applications.</param>
        /// <param name="passiveSignInUri">URI that web-based clients are
        /// directed to when signing in to Azure Active Directory (Azure AD)
        /// services.</param>
        /// <param name="preferredAuthenticationProtocol">Possible values
        /// include: 'wsFed', 'saml', 'unknownFutureValue'</param>
        /// <param name="signingCertificate">Current certificate used to sign
        /// tokens passed to the Microsoft identity platform. The certificate
        /// is formatted as a Base64 encoded string of the public portion of
        /// the federated IdP's token signing certificate and must be
        /// compatible with the X509Certificate2 class.   This property is used
        /// in the following scenarios:  if a rollover is required outside of
        /// the autorollover update a new federation service is being set up
        /// if the new token signing certificate isn't present in the
        /// federation properties after the federation service certificate has
        /// been updated.   Azure AD updates certificates via an autorollover
        /// process in which it attempts to retrieve a new certificate from the
        /// federation service metadata, 30 days before expiry of the current
        /// certificate. If a new certificate isn't available, Azure AD
        /// monitors the metadata daily and will update the federation settings
        /// for the domain when a new certificate is available.</param>
        public MicrosoftgraphsamlOrWsFedProvider(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string id = default(string), string displayName = default(string), string issuerUri = default(string), string metadataExchangeUri = default(string), string passiveSignInUri = default(string), string preferredAuthenticationProtocol = default(string), string signingCertificate = default(string))
            : base(additionalProperties, id, displayName)
        {
            IssuerUri = issuerUri;
            MetadataExchangeUri = metadataExchangeUri;
            PassiveSignInUri = passiveSignInUri;
            PreferredAuthenticationProtocol = preferredAuthenticationProtocol;
            SigningCertificate = signingCertificate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets issuer URI of the federation server.
        /// </summary>
        [JsonProperty(PropertyName = "issuerUri")]
        public string IssuerUri { get; set; }

        /// <summary>
        /// Gets or sets URI of the metadata exchange endpoint used for
        /// authentication from rich client applications.
        /// </summary>
        [JsonProperty(PropertyName = "metadataExchangeUri")]
        public string MetadataExchangeUri { get; set; }

        /// <summary>
        /// Gets or sets URI that web-based clients are directed to when
        /// signing in to Azure Active Directory (Azure AD) services.
        /// </summary>
        [JsonProperty(PropertyName = "passiveSignInUri")]
        public string PassiveSignInUri { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'wsFed', 'saml',
        /// 'unknownFutureValue'
        /// </summary>
        [JsonProperty(PropertyName = "preferredAuthenticationProtocol")]
        public string PreferredAuthenticationProtocol { get; set; }

        /// <summary>
        /// Gets or sets current certificate used to sign tokens passed to the
        /// Microsoft identity platform. The certificate is formatted as a
        /// Base64 encoded string of the public portion of the federated IdP's
        /// token signing certificate and must be compatible with the
        /// X509Certificate2 class.   This property is used in the following
        /// scenarios:  if a rollover is required outside of the autorollover
        /// update a new federation service is being set up  if the new token
        /// signing certificate isn't present in the federation properties
        /// after the federation service certificate has been updated.   Azure
        /// AD updates certificates via an autorollover process in which it
        /// attempts to retrieve a new certificate from the federation service
        /// metadata, 30 days before expiry of the current certificate. If a
        /// new certificate isn't available, Azure AD monitors the metadata
        /// daily and will update the federation settings for the domain when a
        /// new certificate is available.
        /// </summary>
        [JsonProperty(PropertyName = "signingCertificate")]
        public string SigningCertificate { get; set; }

    }
}
