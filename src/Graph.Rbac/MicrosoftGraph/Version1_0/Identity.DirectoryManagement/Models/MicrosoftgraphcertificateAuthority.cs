// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Common.MSGraph.Version1_0.Identity.DirectoryManagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// certificateAuthority
    /// </summary>
    public partial class MicrosoftgraphcertificateAuthority
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphcertificateAuthority class.
        /// </summary>
        public MicrosoftgraphcertificateAuthority()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphcertificateAuthority class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="certificate">Required. The base64 encoded string
        /// representing the public certificate.</param>
        /// <param name="certificateRevocationListUrl">The URL of the
        /// certificate revocation list.</param>
        /// <param name="deltaCertificateRevocationListUrl">The URL contains
        /// the list of all revoked certificates since the last time a full
        /// certificate revocaton list was created.</param>
        /// <param name="isRootAuthority">Required. true if the trusted
        /// certificate is a root authority, false if the trusted certificate
        /// is an intermediate authority.</param>
        /// <param name="issuer">The issuer of the certificate, calculated from
        /// the certificate value. Read-only.</param>
        /// <param name="issuerSki">The subject key identifier of the
        /// certificate, calculated from the certificate value.
        /// Read-only.</param>
        public MicrosoftgraphcertificateAuthority(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), byte[] certificate = default(byte[]), string certificateRevocationListUrl = default(string), string deltaCertificateRevocationListUrl = default(string), bool? isRootAuthority = default(bool?), string issuer = default(string), string issuerSki = default(string))
        {
            AdditionalProperties = additionalProperties;
            Certificate = certificate;
            CertificateRevocationListUrl = certificateRevocationListUrl;
            DeltaCertificateRevocationListUrl = deltaCertificateRevocationListUrl;
            IsRootAuthority = isRootAuthority;
            Issuer = issuer;
            IssuerSki = issuerSki;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets required. The base64 encoded string representing the
        /// public certificate.
        /// </summary>
        [JsonConverter(typeof(Base64UrlJsonConverter))]
        [JsonProperty(PropertyName = "certificate")]
        public byte[] Certificate { get; set; }

        /// <summary>
        /// Gets or sets the URL of the certificate revocation list.
        /// </summary>
        [JsonProperty(PropertyName = "certificateRevocationListUrl")]
        public string CertificateRevocationListUrl { get; set; }

        /// <summary>
        /// Gets or sets the URL contains the list of all revoked certificates
        /// since the last time a full certificate revocaton list was created.
        /// </summary>
        [JsonProperty(PropertyName = "deltaCertificateRevocationListUrl")]
        public string DeltaCertificateRevocationListUrl { get; set; }

        /// <summary>
        /// Gets or sets required. true if the trusted certificate is a root
        /// authority, false if the trusted certificate is an intermediate
        /// authority.
        /// </summary>
        [JsonProperty(PropertyName = "isRootAuthority")]
        public bool? IsRootAuthority { get; set; }

        /// <summary>
        /// Gets or sets the issuer of the certificate, calculated from the
        /// certificate value. Read-only.
        /// </summary>
        [JsonProperty(PropertyName = "issuer")]
        public string Issuer { get; set; }

        /// <summary>
        /// Gets or sets the subject key identifier of the certificate,
        /// calculated from the certificate value. Read-only.
        /// </summary>
        [JsonProperty(PropertyName = "issuerSki")]
        public string IssuerSki { get; set; }

    }
}
