// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Common.MSGraph.Groups.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MicrosoftGraphGroup : MicrosoftGraphDirectoryObject
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftGraphGroup class.
        /// </summary>
        public MicrosoftGraphGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftGraphGroup class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="id">Read-only.</param>
        /// <param name="appRoleAssignments">Represents the app roles a group
        /// has been granted for an application. Supports $expand.</param>
        /// <param name="description">An optional description for the group.
        /// Returned by default. Supports $filter (eq, ne, NOT, ge, le,
        /// startsWith) and $search.</param>
        /// <param name="displayName">The display name for the group. This
        /// property is required when a group is created and cannot be cleared
        /// during updates. Returned by default. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith), $search, and $orderBy.</param>
        /// <param name="mail">The SMTP address for the group, for example,
        /// 'serviceadmins@contoso.onmicrosoft.com'. Returned by default.
        /// Read-only. Supports $filter (eq, ne, NOT, ge, le, in,
        /// startsWith).</param>
        /// <param name="mailEnabled">Specifies whether the group is
        /// mail-enabled. Returned by default. Supports $filter (eq, ne,
        /// NOT).</param>
        /// <param name="mailNickname">The mail alias for the group, unique in
        /// the organization. This property must be specified when a group is
        /// created. These characters cannot be used in the mailNickName:
        /// @()/[]';:.&lt;&gt;,SPACE. Returned by default. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith).</param>
        /// <param name="securityEnabled">Specifies whether the group is a
        /// security group. Returned by default. Supports $filter (eq, ne, NOT,
        /// in).</param>
        public MicrosoftGraphGroup(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string id = default(string), System.DateTime? deletedDateTime = default(System.DateTime?), IList<MicrosoftGraphAppRoleAssignment> appRoleAssignments = default(IList<MicrosoftGraphAppRoleAssignment>), string description = default(string), string displayName = default(string), string mail = default(string), bool? mailEnabled = default(bool?), string mailNickname = default(string), bool? securityEnabled = default(bool?))
            : base(additionalProperties, id, deletedDateTime)
        {
            AppRoleAssignments = appRoleAssignments;
            Description = description;
            DisplayName = displayName;
            Mail = mail;
            MailEnabled = mailEnabled;
            MailNickname = mailNickname;
            SecurityEnabled = securityEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets represents the app roles a group has been granted for
        /// an application. Supports $expand.
        /// </summary>
        [JsonProperty(PropertyName = "appRoleAssignments")]
        public IList<MicrosoftGraphAppRoleAssignment> AppRoleAssignments { get; set; }

        /// <summary>
        /// Gets or sets an optional description for the group. Returned by
        /// default. Supports $filter (eq, ne, NOT, ge, le, startsWith) and
        /// $search.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the display name for the group. This property is
        /// required when a group is created and cannot be cleared during
        /// updates. Returned by default. Supports $filter (eq, ne, NOT, ge,
        /// le, in, startsWith), $search, and $orderBy.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the SMTP address for the group, for example,
        /// 'serviceadmins@contoso.onmicrosoft.com'. Returned by default.
        /// Read-only. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [JsonProperty(PropertyName = "mail")]
        public string Mail { get; set; }

        /// <summary>
        /// Gets or sets specifies whether the group is mail-enabled. Returned
        /// by default. Supports $filter (eq, ne, NOT).
        /// </summary>
        [JsonProperty(PropertyName = "mailEnabled")]
        public bool? MailEnabled { get; set; }

        /// <summary>
        /// Gets or sets the mail alias for the group, unique in the
        /// organization. This property must be specified when a group is
        /// created. These characters cannot be used in the mailNickName:
        /// @()/[]';:.&amp;lt;&amp;gt;,SPACE. Returned by default. Supports
        /// $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [JsonProperty(PropertyName = "mailNickname")]
        public string MailNickname { get; set; }

        /// <summary>
        /// Gets or sets specifies whether the group is a security group.
        /// Returned by default. Supports $filter (eq, ne, NOT, in).
        /// </summary>
        [JsonProperty(PropertyName = "securityEnabled")]
        public bool? SecurityEnabled { get; set; }

    }
}
