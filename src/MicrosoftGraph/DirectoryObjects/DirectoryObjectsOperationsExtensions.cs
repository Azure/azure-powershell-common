// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Common.MSGraph.DirectoryObjects
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for DirectoryObjectsOperations.
    /// </summary>
    public static partial class DirectoryObjectsOperationsExtensions
    {
            /// <summary>
            /// Get entities from directoryObjects
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='consistencyLevel'>
            /// Indicates the requested consistency level. Documentation URL:
            /// https://developer.microsoft.com/en-us/office/blogs/microsoft-graph-advanced-queries-for-directory-objects-are-now-generally-available/
            /// </param>
            /// <param name='top'>
            /// Show only the first n items
            /// </param>
            /// <param name='skip'>
            /// Skip the first n items
            /// </param>
            /// <param name='search'>
            /// Search items by search phrases
            /// </param>
            /// <param name='filter'>
            /// Filter items by property values
            /// </param>
            /// <param name='count'>
            /// Include count of items
            /// </param>
            /// <param name='orderby'>
            /// Order items by property values
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            public static ListDirectoryObjectOKResponse ListDirectoryObject(this IDirectoryObjectsOperations operations, string consistencyLevel = default(string), int? top = default(int?), int? skip = default(int?), string search = default(string), string filter = default(string), bool? count = default(bool?), IList<string> orderby = default(IList<string>), IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>))
            {
                return operations.ListDirectoryObjectAsync(consistencyLevel, top, skip, search, filter, count, orderby, select, expand).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get entities from directoryObjects
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='consistencyLevel'>
            /// Indicates the requested consistency level. Documentation URL:
            /// https://developer.microsoft.com/en-us/office/blogs/microsoft-graph-advanced-queries-for-directory-objects-are-now-generally-available/
            /// </param>
            /// <param name='top'>
            /// Show only the first n items
            /// </param>
            /// <param name='skip'>
            /// Skip the first n items
            /// </param>
            /// <param name='search'>
            /// Search items by search phrases
            /// </param>
            /// <param name='filter'>
            /// Filter items by property values
            /// </param>
            /// <param name='count'>
            /// Include count of items
            /// </param>
            /// <param name='orderby'>
            /// Order items by property values
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ListDirectoryObjectOKResponse> ListDirectoryObjectAsync(this IDirectoryObjectsOperations operations, string consistencyLevel = default(string), int? top = default(int?), int? skip = default(int?), string search = default(string), string filter = default(string), bool? count = default(bool?), IList<string> orderby = default(IList<string>), IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListDirectoryObjectWithHttpMessagesAsync(consistencyLevel, top, skip, search, filter, count, orderby, select, expand, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Add new entity to directoryObjects
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// New entity
            /// </param>
            public static MicrosoftGraphDirectoryObject CreateDirectoryObject(this IDirectoryObjectsOperations operations, MicrosoftGraphDirectoryObject body)
            {
                return operations.CreateDirectoryObjectAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Add new entity to directoryObjects
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// New entity
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MicrosoftGraphDirectoryObject> CreateDirectoryObjectAsync(this IDirectoryObjectsOperations operations, MicrosoftGraphDirectoryObject body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateDirectoryObjectWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Invoke action getByIds
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// Action parameters
            /// </param>
            public static GetByIdsOKResponse GetByIds(this IDirectoryObjectsOperations operations, Body body)
            {
                return operations.GetByIdsAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Invoke action getByIds
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// Action parameters
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GetByIdsOKResponse> GetByIdsAsync(this IDirectoryObjectsOperations operations, Body body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetByIdsWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete entity from directoryObjects
            /// </summary>
            /// <remarks>
            /// Represents an Azure Active Directory object. The directoryObject type is
            /// the base type for many other directory entity types.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='directoryObjectId'>
            /// key: id of directoryObject
            /// </param>
            /// <param name='ifMatch'>
            /// ETag
            /// </param>
            public static void DeleteDirectoryObject(this IDirectoryObjectsOperations operations, string directoryObjectId, string ifMatch = default(string))
            {
                operations.DeleteDirectoryObjectAsync(directoryObjectId, ifMatch).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete entity from directoryObjects
            /// </summary>
            /// <remarks>
            /// Represents an Azure Active Directory object. The directoryObject type is
            /// the base type for many other directory entity types.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='directoryObjectId'>
            /// key: id of directoryObject
            /// </param>
            /// <param name='ifMatch'>
            /// ETag
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteDirectoryObjectAsync(this IDirectoryObjectsOperations operations, string directoryObjectId, string ifMatch = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteDirectoryObjectWithHttpMessagesAsync(directoryObjectId, ifMatch, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Get entity from directoryObjects by key
            /// </summary>
            /// <remarks>
            /// Represents an Azure Active Directory object. The directoryObject type is
            /// the base type for many other directory entity types.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='directoryObjectId'>
            /// key: id of directoryObject
            /// </param>
            /// <param name='consistencyLevel'>
            /// Indicates the requested consistency level. Documentation URL:
            /// https://developer.microsoft.com/en-us/office/blogs/microsoft-graph-advanced-queries-for-directory-objects-are-now-generally-available/
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            public static MicrosoftGraphDirectoryObject GetDirectoryObject(this IDirectoryObjectsOperations operations, string directoryObjectId, string consistencyLevel = default(string), IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>))
            {
                return operations.GetDirectoryObjectAsync(directoryObjectId, consistencyLevel, select, expand).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get entity from directoryObjects by key
            /// </summary>
            /// <remarks>
            /// Represents an Azure Active Directory object. The directoryObject type is
            /// the base type for many other directory entity types.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='directoryObjectId'>
            /// key: id of directoryObject
            /// </param>
            /// <param name='consistencyLevel'>
            /// Indicates the requested consistency level. Documentation URL:
            /// https://developer.microsoft.com/en-us/office/blogs/microsoft-graph-advanced-queries-for-directory-objects-are-now-generally-available/
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MicrosoftGraphDirectoryObject> GetDirectoryObjectAsync(this IDirectoryObjectsOperations operations, string directoryObjectId, string consistencyLevel = default(string), IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDirectoryObjectWithHttpMessagesAsync(directoryObjectId, consistencyLevel, select, expand, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update entity in directoryObjects
            /// </summary>
            /// <remarks>
            /// Represents an Azure Active Directory object. The directoryObject type is
            /// the base type for many other directory entity types.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='directoryObjectId'>
            /// key: id of directoryObject
            /// </param>
            /// <param name='body'>
            /// New property values
            /// </param>
            public static void UpdateDirectoryObject(this IDirectoryObjectsOperations operations, string directoryObjectId, MicrosoftGraphDirectoryObject body)
            {
                operations.UpdateDirectoryObjectAsync(directoryObjectId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update entity in directoryObjects
            /// </summary>
            /// <remarks>
            /// Represents an Azure Active Directory object. The directoryObject type is
            /// the base type for many other directory entity types.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='directoryObjectId'>
            /// key: id of directoryObject
            /// </param>
            /// <param name='body'>
            /// New property values
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdateDirectoryObjectAsync(this IDirectoryObjectsOperations operations, string directoryObjectId, MicrosoftGraphDirectoryObject body, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.UpdateDirectoryObjectWithHttpMessagesAsync(directoryObjectId, body, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
