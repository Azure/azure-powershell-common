// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.PowerShell.Cmdlets.MicrosoftGraph.Applications.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// optionalClaims
    /// </summary>
    public partial class MicrosoftgraphoptionalClaims
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphoptionalClaims
        /// class.
        /// </summary>
        public MicrosoftgraphoptionalClaims()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphoptionalClaims
        /// class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="accessToken">The optional claims returned in the JWT
        /// access token.</param>
        /// <param name="idToken">The optional claims returned in the JWT ID
        /// token.</param>
        /// <param name="saml2Token">The optional claims returned in the SAML
        /// token.</param>
        public MicrosoftgraphoptionalClaims(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), IList<MicrosoftgraphoptionalClaim> accessToken = default(IList<MicrosoftgraphoptionalClaim>), IList<MicrosoftgraphoptionalClaim> idToken = default(IList<MicrosoftgraphoptionalClaim>), IList<MicrosoftgraphoptionalClaim> saml2Token = default(IList<MicrosoftgraphoptionalClaim>))
        {
            AdditionalProperties = additionalProperties;
            AccessToken = accessToken;
            IdToken = idToken;
            Saml2Token = saml2Token;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets the optional claims returned in the JWT access token.
        /// </summary>
        [JsonProperty(PropertyName = "accessToken")]
        public IList<MicrosoftgraphoptionalClaim> AccessToken { get; set; }

        /// <summary>
        /// Gets or sets the optional claims returned in the JWT ID token.
        /// </summary>
        [JsonProperty(PropertyName = "idToken")]
        public IList<MicrosoftgraphoptionalClaim> IdToken { get; set; }

        /// <summary>
        /// Gets or sets the optional claims returned in the SAML token.
        /// </summary>
        [JsonProperty(PropertyName = "saml2Token")]
        public IList<MicrosoftgraphoptionalClaim> Saml2Token { get; set; }

    }
}
