// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.PowerShell.Cmdlets.MicrosoftGraph.Applications.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// requiredResourceAccess
    /// </summary>
    public partial class MicrosoftgraphrequiredResourceAccess
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphrequiredResourceAccess class.
        /// </summary>
        public MicrosoftgraphrequiredResourceAccess()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphrequiredResourceAccess class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="resourceAccess">The list of OAuth2.0 permission scopes
        /// and app roles that the application requires from the specified
        /// resource.</param>
        /// <param name="resourceAppId">The unique identifier for the resource
        /// that the application requires access to.  This should be equal to
        /// the appId declared on the target resource application.</param>
        public MicrosoftgraphrequiredResourceAccess(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), IList<MicrosoftgraphresourceAccess> resourceAccess = default(IList<MicrosoftgraphresourceAccess>), string resourceAppId = default(string))
        {
            AdditionalProperties = additionalProperties;
            ResourceAccess = resourceAccess;
            ResourceAppId = resourceAppId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets the list of OAuth2.0 permission scopes and app roles
        /// that the application requires from the specified resource.
        /// </summary>
        [JsonProperty(PropertyName = "resourceAccess")]
        public IList<MicrosoftgraphresourceAccess> ResourceAccess { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier for the resource that the
        /// application requires access to.  This should be equal to the appId
        /// declared on the target resource application.
        /// </summary>
        [JsonProperty(PropertyName = "resourceAppId")]
        public string ResourceAppId { get; set; }

    }
}
