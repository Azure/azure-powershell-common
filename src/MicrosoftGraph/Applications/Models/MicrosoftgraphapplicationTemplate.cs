// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Common.MSGraph.Applications.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MicrosoftGraphApplicationTemplate : MicrosoftGraphEntity
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftGraphApplicationTemplate
        /// class.
        /// </summary>
        public MicrosoftGraphApplicationTemplate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftGraphApplicationTemplate
        /// class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="id">Read-only.</param>
        /// <param name="categories">The list of categories for the
        /// application. Supported values can be: Collaboration, Business
        /// Management, Consumer, Content management, CRM, Data services,
        /// Developer services, E-commerce, Education, ERP, Finance, Health,
        /// Human resources, IT infrastructure, Mail, Management, Marketing,
        /// Media, Productivity, Project management, Telecommunications, Tools,
        /// Travel, and Web design &amp; hosting.</param>
        /// <param name="description">A description of the application.</param>
        /// <param name="displayName">The name of the application.</param>
        /// <param name="homePageUrl">The home page URL of the
        /// application.</param>
        /// <param name="logoUrl">The URL to get the logo for this
        /// application.</param>
        /// <param name="publisher">The name of the publisher for this
        /// application.</param>
        /// <param name="supportedProvisioningTypes">The list of provisioning
        /// modes supported by this application. The only valid value is
        /// sync.</param>
        /// <param name="supportedSingleSignOnModes">The list of single sign-on
        /// modes supported by this application. The supported values are oidc,
        /// password, saml, and notSupported.</param>
        public MicrosoftGraphApplicationTemplate(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string id = default(string), IList<string> categories = default(IList<string>), string description = default(string), string displayName = default(string), string homePageUrl = default(string), string logoUrl = default(string), string publisher = default(string), IList<string> supportedProvisioningTypes = default(IList<string>), IList<string> supportedSingleSignOnModes = default(IList<string>))
            : base(additionalProperties, id)
        {
            Categories = categories;
            Description = description;
            DisplayName = displayName;
            HomePageUrl = homePageUrl;
            LogoUrl = logoUrl;
            Publisher = publisher;
            SupportedProvisioningTypes = supportedProvisioningTypes;
            SupportedSingleSignOnModes = supportedSingleSignOnModes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the list of categories for the application. Supported
        /// values can be: Collaboration, Business Management, Consumer,
        /// Content management, CRM, Data services, Developer services,
        /// E-commerce, Education, ERP, Finance, Health, Human resources, IT
        /// infrastructure, Mail, Management, Marketing, Media, Productivity,
        /// Project management, Telecommunications, Tools, Travel, and Web
        /// design &amp;amp; hosting.
        /// </summary>
        [JsonProperty(PropertyName = "categories")]
        public IList<string> Categories { get; set; }

        /// <summary>
        /// Gets or sets a description of the application.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the name of the application.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the home page URL of the application.
        /// </summary>
        [JsonProperty(PropertyName = "homePageUrl")]
        public string HomePageUrl { get; set; }

        /// <summary>
        /// Gets or sets the URL to get the logo for this application.
        /// </summary>
        [JsonProperty(PropertyName = "logoUrl")]
        public string LogoUrl { get; set; }

        /// <summary>
        /// Gets or sets the name of the publisher for this application.
        /// </summary>
        [JsonProperty(PropertyName = "publisher")]
        public string Publisher { get; set; }

        /// <summary>
        /// Gets or sets the list of provisioning modes supported by this
        /// application. The only valid value is sync.
        /// </summary>
        [JsonProperty(PropertyName = "supportedProvisioningTypes")]
        public IList<string> SupportedProvisioningTypes { get; set; }

        /// <summary>
        /// Gets or sets the list of single sign-on modes supported by this
        /// application. The supported values are oidc, password, saml, and
        /// notSupported.
        /// </summary>
        [JsonProperty(PropertyName = "supportedSingleSignOnModes")]
        public IList<string> SupportedSingleSignOnModes { get; set; }

    }
}
