// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.PowerShell.Cmdlets.MicrosoftGraph.Applications.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// optionalClaim
    /// </summary>
    public partial class MicrosoftgraphoptionalClaim
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphoptionalClaim
        /// class.
        /// </summary>
        public MicrosoftgraphoptionalClaim()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphoptionalClaim
        /// class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="additionalProperties1">Additional properties of the
        /// claim. If a property exists in this collection, it modifies the
        /// behavior of the optional claim specified in the name
        /// property.</param>
        /// <param name="essential">If the value is true, the claim specified
        /// by the client is necessary to ensure a smooth authorization
        /// experience for the specific task requested by the end user. The
        /// default value is false.</param>
        /// <param name="name">The name of the optional claim.</param>
        /// <param name="source">The source (directory object) of the claim.
        /// There are predefined claims and user-defined claims from extension
        /// properties. If the source value is null, the claim is a predefined
        /// optional claim. If the source value is user, the value in the name
        /// property is the extension property from the user object.</param>
        public MicrosoftgraphoptionalClaim(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), IList<string> additionalProperties1 = default(IList<string>), bool? essential = default(bool?), string name = default(string), string source = default(string))
        {
            AdditionalProperties = additionalProperties;
            AdditionalProperties1 = additionalProperties1;
            Essential = essential;
            Name = name;
            Source = source;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets additional properties of the claim. If a property
        /// exists in this collection, it modifies the behavior of the optional
        /// claim specified in the name property.
        /// </summary>
        [JsonProperty(PropertyName = "additionalProperties")]
        public IList<string> AdditionalProperties1 { get; set; }

        /// <summary>
        /// Gets or sets if the value is true, the claim specified by the
        /// client is necessary to ensure a smooth authorization experience for
        /// the specific task requested by the end user. The default value is
        /// false.
        /// </summary>
        [JsonProperty(PropertyName = "essential")]
        public bool? Essential { get; set; }

        /// <summary>
        /// Gets or sets the name of the optional claim.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the source (directory object) of the claim. There are
        /// predefined claims and user-defined claims from extension
        /// properties. If the source value is null, the claim is a predefined
        /// optional claim. If the source value is user, the value in the name
        /// property is the extension property from the user object.
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

    }
}
